{"version":3,"sources":["styles.js","list.js","view.js","index.js"],"names":["colors","FILLS_QUERY_INTERNAL","FILL_SUBSCRIPTION","gql","_templateObject","FILL_QUERY","_templateObject2","FillsListView","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","subscribeToMore","data","react_default","a","createElement","style","width","padding","fills","slice","map","_ref","createdAt","transactionHash","id","taker","makerAssetFilledAmount","takerAssetFilledAmount","order","href","concat","substr","maker","React","PureComponent","list","react_apollo_esm","query","_ref2","loading","error","list_FillsListView","document","updateQuery","prev","_ref3","subscriptionData","ExchangeRateView","Component","wsLink","WebSocketLink","uri","options","reconnect","httpLink","HttpLink","link","split","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","backgroundColor","view_ExchangeRateView","getElementById"],"mappings":"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","file":"static/js/main.e819d6c6.chunk.js","sourcesContent":["export const colors = {\n  darkBlue: \"#2E3B4B\",\n  white: \"#f0f2f5\",\n  grey: \"#dee3e8\",\n  teal: \"#287b97\"\n};\n\nexport const fontSize = {\n  large: \"6em\",\n  medium: \"4em\",\n  small: \"2em\"\n};\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst FILLS_QUERY_INTERNAL = `\n  createdAt\n  makerAssetFilledAmount\n  takerAssetFilledAmount\n  taker\n  order {\n      id\n      maker\n  }\n  transactionHash\n  id\n`;\nconst FILL_SUBSCRIPTION = gql`\n    subscription fills {\n      fills(orderBy: createdAt, orderDirection: desc) {\n        ${FILLS_QUERY_INTERNAL}\n      }\n    }\n`;\n\nconst FILL_QUERY = gql`\n    {\n      fills(orderBy: createdAt, orderDirection: desc, first: 15) {\n        ${FILLS_QUERY_INTERNAL}\n      }\n    }\n`;\n\nconst FillsListView = class extends React.PureComponent {\n    componentDidMount() {\n        this.props.subscribeToMore();\n    }\n    render() {\n        const { data } = this.props;\n        return (\n            <div style={{ width: '100%', padding: 30 }}>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Tx hash</th>\n                            <th>createdAt</th>\n                            <th>maker</th>\n                            <th>taker</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.fills\n                            .slice(0, 15)\n                            .map(\n                                ({\n                                    createdAt,\n                                    transactionHash,\n                                    id,\n                                    makerAssetFilledAmount,\n                                    takerAssetFilledAmount,\n                                    taker,\n                                    order,\n                                }) => (\n                                    <tr key={id}>\n                                        <td>\n                                            <a href={`https://etherscan.io/tx/${transactionHash}`}>\n                                                {transactionHash.substr(0, 16)}...\n                                            </a>\n                                        </td>\n                                        <td>{createdAt}</td>\n                                        <td>{order.maker}</td>\n                                        <td>{taker}</td>\n                                    </tr>\n                                ),\n                            )}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n};\nexport default () => (\n    <Query query={FILL_QUERY}>\n        {({ loading, error, data, subscribeToMore }) => {\n            if (loading) return null;\n            if (error) return <p>{`Error: ${error}`}</p>;\n            const more = () =>\n                subscribeToMore({\n                    document: FILL_SUBSCRIPTION,\n                    updateQuery: (prev, { subscriptionData }) => {\n                        if (!subscriptionData.data) return prev;\n                        return subscriptionData.data;\n                    },\n                });\n            return <FillsListView data={data} subscribeToMore={more} />;\n        }}\n    </Query>\n);\n","import React, { Component } from 'react';\nimport ExchangeRateList from './list';\n\nexport default class ExchangeRateView extends Component {\n    render() {\n        return (\n            <div style={{ padding: 20 }}>\n                <h1>0x Fills</h1>\n                <ExchangeRateList />\n            </div>\n        );\n    }\n}\n","import { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { colors } from './styles';\nimport FillsView from './view';\n\nconst wsLink = new WebSocketLink({\n    uri: `wss://api.thegraph.com/subgraphs/name/dekz/zeroex`,\n    options: {\n        reconnect: true,\n    },\n});\nconst httpLink = new HttpLink({\n    uri: `https://api.thegraph.com/subgraphs/name/dekz/zeroex`,\n});\n\nconst link = split(\n    ({ query }) => {\n        const { kind, operation } = getMainDefinition(query);\n        return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsLink,\n    httpLink,\n);\n\nconst client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n});\n\nconst App = () => (\n    <ApolloProvider client={client}>\n        <div id=\"root\" style={{ backgroundColor: colors.white }}>\n            <FillsView />\n        </div>\n    </ApolloProvider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}